#!/usr/bin/env python3
from lib.libdiscord.TP import DIS_TP
from lib.libdiscord.color import hex_color
import random
import sys
import os
import io

print(sys.argv[1])

def help(FIT:str):
    t = DIS_TP(FIT)
    c = hex_color(0x84, 0xF8, 0xF4)
    STR = "get_code [flie]\nfile: path to file"
    print(hex(c.__int__()))
    t.ENBED("help for get_code", STR)
    return 0


if (sys.argv[2] == "--help"):
    help(sys.argv[1])
    exit(0)

CODE:str
DIR = os.path.abspath(".")

def main(FIT:str, FNAME:str, bloc:int) -> int:
    c = hex_color(0x84, 0xF8, 0xF4)
    print(bloc)
    print(FNAME)
    bl:str = ""
    t = DIS_TP(FIT)
    if ((FNAME.endswith("tok.json")) or (FNAME.endswith(".user")) or (FNAME.endswith(".user.conf"))):
        t.TEXT("NO")
        exit()


    if (os.path.exists(f"{DIR}/{FNAME}") == False):
        t.TEXT("BAD PATH")
        exit(55)

    with open(f"{DIR}/{FNAME}", "r") as buff:
        CODE = buff.read()

    #nId = len(CODE)%16
    #print(nId)
    #if ((len(CODE) == 2000) or (len(CODE) < 2000)):
    #    bl = CODE
    #elif not (bloc == -1):
    #    ofb = 0
    #    ofe = len(CODE)
    #    if (bloc == 1):
    #        ofb = 0
    #        ofe = 700
    #    else:
    #        ofb = 0 + (650 + (bloc + 100))
    #        ofe = 700 + (700 + (bloc + 100))
    #        print(ofb)
    #        print(ofe)
    #        print(f"sr = {len(CODE)}")
    #        if ofe > len(CODE):
    #            ofe = len(CODE)
    #    for i in range(ofb, ofe):
    #        bl = bl + CODE[i]
    #elif (bloc == -1):
    #    return 666
    


    
    if (FNAME.endswith(".json") or FNAME.endswith(".conf")):
        t.ENBED(f"{FNAME}", f"```json\n{CODE}\n```", FOOTER="json view")
        exit()
    elif (FNAME.endswith(".py") or FNAME.endswith(".boot") or FNAME.endswith(".prog") or FNAME.endswith("gconf")):
        t.ENBED(f"{FNAME}", f"```py\n{CODE}\n```", FOOTER="python view")
        exit()
    elif (FNAME.endswith(".sh")):
        t.ENBED(f"{FNAME}", f"```sh\n{CODE}\n```",FOOTER="shell view")
        exit()
    elif (FNAME.endswith(".md")):
        t.ENBED(f"{FNAME}", f"```md\n{CODE}\n```", FOOTER="markdown view")
        exit()
    else:
        t.ENBED(f"{FNAME}", f"```\n{CODE}\n```", FOOTER="plain view")
        exit()
    return 0
#print()
#sys.exit(main(sys.argv[1], sys.argv[2], int(sys.argv[3])))
main(sys.argv[1], sys.argv[2], -1)
